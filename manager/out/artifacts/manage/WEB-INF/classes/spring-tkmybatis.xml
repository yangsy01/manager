<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
">
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    <!-- <task:annotation-driven /> -->
    <!-- jndi方式 -->
    <!-- 配置数据源 -->
    <bean name="tk_sql_dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${sql_driverClassName}"/>
        <property name="url" value="${sql_url}"/>
        <property name="username" value="${sql_username}"/>
        <property name="password" value="${sql_password}"/>
        <property name="initialSize" value="0"/>
        <property name="maxActive" value="20"/>
        <property name="maxIdle" value="20"/>
        <property name="minIdle" value="0"/>
        <property name="maxWait" value="60000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="33"/>
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="25200000"/>
        <!-- 超过时间限制是否回收 -->
        <!-- 配置removeAbandoned对性能会有一些影响，建议怀疑存在泄漏之后再打开。
            在上面的配置中，如果连接超过3分钟未关闭，
            就会被强行回收，并且日志记录连接申请时的调用堆栈。 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 超时时间；单位为秒。180秒=3分钟 -->
        <property name="removeAbandonedTimeout" value="180"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>

        <!-- 监控数据库 -->
        <property name="filters" value="mergeStat"/>
        <!--<property name="filters" value="stat" />-->

    </bean>


    <bean id="tk_sql_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="tk_sql_dataSource"/>
        <!-- 自动扫描entity目录, 覆盖Configuration.xml里的手工配置 -->
        <property name="mapperLocations" value="classpath:com/voucher/manage2/tkmapper/mapper/*.xml"/>
        <property name="configLocation" value="classpath:/config.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            params=value1
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.voucher.manage2.tkmapper.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="tk_sql_sqlSessionFactory"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="tk_sql_transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="tk_sql_dataSource"/>
    </bean>

    <!-- 注解方式配置事物 -->
    <tx:annotation-driven transaction-manager="tk_sql_transactionManager" proxy-target-class="true"/>

    <!-- 拦截器方式配置事物 -->
    <tx:advice id="tk_sql_transactionAdvice" transaction-manager="tk_sql_transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="append*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="repair" propagation="REQUIRED"/>
            <tx:method name="delAndRepair" propagation="REQUIRED"/>

            <tx:method name="get*" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="load*" propagation="SUPPORTS"/>
            <tx:method name="search*" propagation="SUPPORTS"/>
            <tx:method name="datagrid*" propagation="SUPPORTS"/>

            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="tk_sql_transactionPointcut"
                      expression="execution(* com.voucher.manage2.service.impl..*.*(..))"/>
        <aop:advisor pointcut-ref="tk_sql_transactionPointcut"
                     advice-ref="tk_sql_transactionAdvice"/>
    </aop:config>


    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor"
          class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>

    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
          scope="prototype">
        <property name="patterns">
            <list>
                <value>com.voucher.*</value>
            </list>
        </property>
    </bean>
</beans>